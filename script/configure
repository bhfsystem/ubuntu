#!/usr/bin/env bash

function main {
  local shome="$(cd -P -- "${BASH_SOURCE%/*}/.." && pwd -P)"
  source "$shome/script/profile"

  cd "$shome"

  case "$(uname -s)" in
    Darwin)
      sudo route -n add -net 172.28.130.0/23 172.28.128.10
      
      echo 'server=/dc1.consul/172.28.128.10' | tee -a "$HOME/homebrew/etc/dnsmasq.conf"
      echo "address=/nih/172.28.128.10" | tee -a "$HOME/homebrew/etc/dnsmasq.conf"
      echo 'server=8.8.4.4' | tee -a "$HOME/homebrew/etc/dnsmasq.conf"
      brew services restart dnsmasq
      ;;
    *)
      sudo ifconfig lo:0 -172.28.29.250 netmask 255.255.255.0 up
      sudo systemctl restart dnsmasq

      local nm_network='ubuntu_default'

      local nm_network_found="$(docker network inspect "$nm_network" 2>/dev/null | jq -r '.[].Name')"

      if [[ "$nm_network_found" != "$nm_network" ]]; then
        make up || true
      fi

      nm_network_found="$(docker network inspect "$nm_network" | jq -r '.[].Name')"
      if [[ "$nm_network_found" != "$nm_network" ]]; then
        echo "ERROR: could not bring up docker network $nm_network" 1>&2
        return 1
      fi

      sudo iptables -t nat -A POSTROUTING -s "$(docker network inspect "$nm_network" | jq -r '.[].IPAM.Config[].Subnet')" ! -o "$(facts | jq -r --arg gateway "$(docker network inspect "$nm_network" | jq -r '.[].IPAM.Config[].Gateway')"  'map(select(type == "object")) | map(select(.type == "bridge")) | map(select({gateway: .ipv4.address} == {gateway: $gateway})) | .[].device')" -j MASQUERADE
      sudo sysctl -w net.ipv4.ip_forward=1
    
      echo 'server=/dc1.consul/127.0.0.1#5354' | sudo tee /etc/dnsmasq.d/nih
      echo "address=/nih/172.28.130.1" | sudo tee -a /etc/dnsmasq.d/nih
      sudo systemctl restart dnsmasq

      echo "DOCKER_OPTS=\"--dns 172.28.130.1 --iptables=false\"" | sudo tee /etc/default/docker
      sudo systemctl restart docker
      ;;
  esac

  if [[ ! -f /config/ssh/authorized_keys ]]; then
    mkdir -p /config/ssh
    rsync -ia ~/.ssh/authorized_keys /config/ssh/authorized_keys
  fi
}

main "$@"
